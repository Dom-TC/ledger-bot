"""Initial model.

Revision ID: 2e8950fafe56
Revises:
Create Date: 2025-08-26 22:14:09.709785

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2e8950fafe56"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "members",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("discord_id", sa.Integer(), nullable=False),
        sa.Column("nickname", sa.String(), nullable=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("dietary_requirements", sa.String(), nullable=True),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_members")),
        sa.UniqueConstraint("discord_id", name=op.f("uq_members_discord_id")),
    )
    op.create_table(
        "reaction_roles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("server_id", sa.Integer(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("reaction_name", sa.String(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("role_name", sa.String(), nullable=False),
        sa.Column("reaction_bytecode", sa.String(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reaction_roles")),
        sa.UniqueConstraint(
            "server_id",
            "message_id",
            "reaction_name",
            name="uq_server_message_reaction",
        ),
    )
    op.create_index(
        "ix_server_message_reaction",
        "reaction_roles",
        ["server_id", "message_id", "reaction_name"],
        unique=False,
    )
    op.create_table(
        "events",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_name", sa.String(), nullable=False),
        sa.Column("event_description", sa.Text(), nullable=True),
        sa.Column("event_date", sa.DateTime(), nullable=True),
        sa.Column("event_location", sa.String(), nullable=True),
        sa.Column("host_id", sa.Integer(), nullable=False),
        sa.Column("max_guests", sa.Integer(), nullable=True),
        sa.Column("deposit_value", sa.Integer(), nullable=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("channel_id", sa.Integer(), nullable=True),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["host_id"], ["members.id"], name=op.f("fk_events_host_id_members")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events")),
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("wine", sa.String(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("seller_id", sa.Integer(), nullable=False),
        sa.Column("buyer_id", sa.Integer(), nullable=False),
        sa.Column("sale_approved", sa.Integer(), nullable=True),
        sa.Column("buyer_delivered", sa.Integer(), nullable=True),
        sa.Column("seller_delivered", sa.Integer(), nullable=True),
        sa.Column("buyer_paid", sa.Integer(), nullable=True),
        sa.Column("seller_paid", sa.Integer(), nullable=True),
        sa.Column("cancelled", sa.Integer(), nullable=True),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("approved_date", sa.DateTime(), nullable=False),
        sa.Column("paid_date", sa.DateTime(), nullable=False),
        sa.Column("delivered_date", sa.DateTime(), nullable=False),
        sa.Column("cancelled_date", sa.DateTime(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=False),
        sa.CheckConstraint(
            "price >= 0", name=op.f("ck_transactions_price_not_negative")
        ),
        sa.ForeignKeyConstraint(
            ["buyer_id"], ["members.id"], name=op.f("fk_transactions_buyer_id_members")
        ),
        sa.ForeignKeyConstraint(
            ["seller_id"],
            ["members.id"],
            name=op.f("fk_transactions_seller_id_members"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_transactions")),
    )
    op.create_table(
        "bot_messages",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("channel_id", sa.Integer(), nullable=False),
        sa.Column("guild_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name=op.f("fk_bot_messages_transaction_id_transactions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_bot_messages")),
        sa.UniqueConstraint("message_id", name=op.f("uq_bot_messages_message_id")),
    )
    op.create_table(
        "event_members",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("guests", sa.Integer(), nullable=False),
        sa.Column("has_paid", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("HOST", "CONFIRMED", "WAITLIST", "CANCELLED", name="memberstatus"),
            nullable=False,
        ),
        sa.Column("joined_date", sa.DateTime(), nullable=False),
        sa.Column("paid_date", sa.DateTime(), nullable=True),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk_event_members_event_id_events")
        ),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["members.id"],
            name=op.f("fk_event_members_member_id_members"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_event_members")),
        sa.UniqueConstraint("event_id", "member_id", name="uq_event_member"),
    )
    op.create_table(
        "event_wines",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("wine", sa.String(), nullable=False),
        sa.Column(
            "category",
            sa.Enum("SPARKLING", "WHITE", "RED", "SWEET", "OTHER", name="winecategory"),
            nullable=False,
        ),
        sa.Column("date_added", sa.DateTime(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk_event_wines_event_id_events")
        ),
        sa.ForeignKeyConstraint(
            ["member_id"], ["members.id"], name=op.f("fk_event_wines_member_id_members")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_event_wines")),
    )
    op.create_table(
        "reminders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "APPROVED",
                "CANCELLED",
                "DELIVERED",
                "PAID",
                "COMPLETED",
                name="reminderstatus",
            ),
            nullable=True,
        ),
        sa.Column("reminder_date", sa.DateTime(), nullable=False),
        sa.Column("creation_date", sa.DateTime(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["member_id"], ["members.id"], name=op.f("fk_reminders_member_id_members")
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name=op.f("fk_reminders_transaction_id_transactions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reminders")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("reminders")
    op.drop_table("event_wines")
    op.drop_table("event_members")
    op.drop_table("bot_messages")
    op.drop_table("transactions")
    op.drop_table("events")
    op.drop_index("ix_server_message_reaction", table_name="reaction_roles")
    op.drop_table("reaction_roles")
    op.drop_table("members")
    # ### end Alembic commands ###
