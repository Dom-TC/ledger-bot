name: Build, Push and Deploy

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

env:
  IMAGE_NAME: ledger-bot
  SERVER_USER: ledger-bot
  SERVER_HOST: ${{ vars.SERVER_IP }}
  SERVER_PORT: 22
  LOG_TO_FILE: ${{ vars.LOG_TO_FILE }}
  BOT_CONFIG: ${{ vars.BOT_CONFIG }}
  BOT_DISCORD_TOKEN: ${{ secrets.BOT_DISCORD_TOKEN }}
  BOT_AIRTABLE_KEY: ${{ secrets.BOT_AIRTABLE_KEY }}
  BOT_AIRTABLE_BASE: ${{ secrets.BOT_AIRTABLE_BASE }}
  BOT_ID: ${{ vars.BOT_ID }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Bot Version
        run: echo "RELEASE_VERSION=`git describe --tags --all | sed -e 's,.*/\(.*\),\1,'`" >> $GITHUB_ENV
        continue-on-error: true

      - name: Build image
        run: docker build --build-arg bot_version=${{ env.RELEASE_VERSION }} . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/Dom-TC/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ]  && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ env.SERVER_PORT }}
          script: |
            docker compose -f /opt/ledger-bot/docker-compose.yml down
            docker compose -f /opt/ledger-bot/docker-compose.yml pull
            docker compose -f //opt/ledger-bot/docker-compose.yml up -d
